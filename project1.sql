
-- tables

CREATE TABLE EMPLOYEES (
    
    EMPLOYEEID INTEGER NOT NULL PRIMARY KEY,
    USERNAME VARCHAR2(25) NOT NULL,
    UPASSWORD VARCHAR2(100) NOT NULL,
    EMAIL VARCHAR2(100)
);
/

CREATE TABLE MANAGERS (
    
    MANAGERID INTEGER NOT NULL PRIMARY KEY,
    USERNAME VARCHAR2(25) NOT NULL,
    MPASSWORD VARCHAR2(100) NOT NULL,
    EMAIL VARCHAR2(100)
);
/

CREATE TABLE REIMBURSMENTS (
    
    REIMBURSMENTID INTEGER NOT NULL PRIMARY KEY,
    EMPLOYEEID INTEGER NOT NULL,
    IMAGE BLOB,
    STATUS NUMBER(1) NOT NULL,
    DATETIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_EMPLOYEE
    FOREIGN KEY (EMPLOYEEID)
    REFERENCES EMPLOYEES(EMPLOYEEID)
);
/


CREATE TABLE MANAGERDECISION (
    
    MANAGERID INTEGER NOT NULL,
    REIMBURSMENTID INTEGER NOT NULL,
    DECISION NUMBER(1),
    DATETIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_REIMBURSMENTS
    FOREIGN KEY (REIMBURSMENTID)
    REFERENCES REIMBURSMENTS(REIMBURSMENTID),
    CONSTRAINT fk_MANAGER
    FOREIGN KEY (MANAGERID)
    REFERENCES MANAGERS(MANAGERID),
    CONSTRAINT pk_MANAGERDECISION
    PRIMARY KEY(MANAGERID, REIMBURSMENTID)
);
/

-- sequences

CREATE SEQUENCE EMPLOYEE_SQ
    MINVALUE 1
    START WITH 1
    INCREMENT BY 1;
/

 CREATE SEQUENCE REIMBURSMENTS_SQ
 MINVALUE 1
 START WITH 1 
 INCREMENT BY 1;
 /
 
CREATE SEQUENCE MANAGER_SQ
 MINVALUE 1
 START WITH 1 
 INCREMENT BY 1;
 /
 
-- triggers
 
 
CREATE OR REPLACE TRIGGER EMPLOYEE_TRIG
BEFORE INSERT ON EMPLOYEES
FOR EACH ROW
BEGIN
	SELECT EMPLOYEE_SQ.NEXTVAL INTO :NEW.EMPLOYEEID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER REIMBURSMENTR_TRIG
BEFORE INSERT ON REIMBURSMENTS
FOR EACH ROW
BEGIN
	SELECT REIMBURSMENTS_SQ.NEXTVAL INTO :NEW.REIMBURSMENTID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER MANAGER_TRIG
BEFORE INSERT ON MANAGERS
FOR EACH ROW
BEGIN
	SELECT MANAGER_SQ.NEXTVAL INTO :NEW.MANAGERID FROM DUAL;
END;
/
